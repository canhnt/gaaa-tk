/*
 * Created on Feb 12, 2005
 *
 */
package org.aaaarch.crypto;

import org.aaaarch.crypto.DesEncrypter;

/**
 * @author demch
 *
 */
public class CryptoData {

	private static String keypassDES = "2badfec5c0de4";

	public static String getKeyPassTest () {
		return keypassDES;
	}
	
	public static String doEncryptData (String datastring, String keypass) {
		//String encdata0 = "SeDFGVHYTY83ZXxEdsweOP8Iok";
		String encdata = null;
		/*/ TODO: this needs to be generated by the Auth system
		//       shall we get it from Chef??
		//       Perhaps the UsageSession associated the User
		//       which can come from the UsageSessionService
		*/
    	try {
            // Generate a temporary key. In practice, you would save this key.
            //SecretKey key = KeyGenerator.getInstance("DES").generateKey();
        
            // Create encrypter/decrypter class
            //DesEncrypter encrypter = new DesEncrypter(key);
    		DesEncrypter encrypter = new DesEncrypter(keypass);
        
            // Encrypt
            encdata = encrypter.encrypt(datastring);
            
        } catch (Exception e) {
        	e.printStackTrace();
        }
		return encdata;
	}

	public static String doEncryptDataHex (String datastring, String keypass) {
		//String encdata0 = "SeDFGVHYTY83ZXxEdsweOP8Iok";
		String encdata = null;
		/*/ TODO: this needs to be generated by the Auth system
		*/
    	try {
            // Generate a temporary key. In practice, you would save this key.
            //SecretKey key = KeyGenerator.getInstance("DES").generateKey();
        
            // Create encrypter/decrypter class
            //DesEncrypter encrypter = new DesEncrypter(key);
    		DesEncrypter encrypter = new DesEncrypter(keypass);
        
            // Encrypt
            encdata = encrypter.encryptHex(datastring);
            
        } catch (Exception e) {
        	e.printStackTrace();
        }
		return encdata;
	}

	public static String doDecryptData (String encdatastring, String keypass) {
		//String encdata0 = "SeDFGVHYTY83ZXxEdsweOP8Iok";
		String decdata = null;
		/*/ TODO: this needs to be generated by the Auth system
		//       shall we get it from Chef??
		//       Perhaps the UsageSession associated the User
		//       which can come from the UsageSessionService
		*/
    	try {
            // Generate a temporary key. In practice, you would save this key.
            //SecretKey key = KeyGenerator.getInstance("DES").generateKey();
        
            // Create encrypter/decrypter class
            //DesEncrypter encrypter = new DesEncrypter(key);
            DesEncrypter encrypter = new DesEncrypter(keypass);
        
            // Decrypt
            decdata = encrypter.decrypt(encdatastring);
        } catch (Exception e) {
        	e.printStackTrace();
        }
		
		return decdata;
	}

	public static String doDecryptDataHex (String encdatastring, String keypass) {
		//String encdata0 = "SeDFGVHYTY83ZXxEdsweOP8Iok";
		String decdata = null;
		/*/ TODO: this needs to be generated by the Auth system
		*/
    	try {
            // Generate a temporary key. In practice, you would save this key.
            //SecretKey key = KeyGenerator.getInstance("DES").generateKey();
        
            // Create encrypter/decrypter class
            //DesEncrypter encrypter = new DesEncrypter(key);
            DesEncrypter encrypter = new DesEncrypter(keypass);
        
            // Decrypt
            decdata = encrypter.decryptHex(encdatastring);
        } catch (Exception e) {
        	e.printStackTrace();
        }
		
		return decdata;
	}

	public static boolean doVerifyEncryptedData (String data, String encdatastring, String keypass) {
		String encdata0 = doEncryptDataHex(data, keypass);
		
		boolean valencr = false;
		//if (encdatastring == encdata) { // this is essential
		if (encdatastring.equals(encdata0)) {
			valencr = true;
		} 
		return valencr;
	}
}
